/* Stylesheet for Devel::Cover HTML reports */

/* You may modify this file to alter the appearance of your coverage
 * reports. If you do, you should probably flag it read-only to prevent
 * future runs from overwriting it.
 */

/* Note: default values use the color-safe web palette. */

body {
    font-family: sans-serif;
}

h1 {
    text-align         : center;
    background-color   : #cc99ff;
    border             : solid 1px #999999;
    padding            : 0.2em;
    -moz-border-radius : 10px;
}

a {
    color: #000000;
}

a:visited {
    color: #333333;
}

table {
    border-spacing: 0px;
}

tr {
    text-align     : center;
    vertical-align : top;
}

th,.h,.hh,.sh,.sv {
    background-color   : #cccccc;
    border             : solid 1px #333333;
    padding            : 0em 0.2em;
    -moz-border-radius : 4px;
}

.sh {
    color       : #CD5555;
    font-weight : bold;
    padding     : 0.2em;
}

.sv {
    padding     : 0.2em;
}

td {
    border             : solid 1px #cccccc;
    border-top         : none;
    border-left        : none;
    -moz-border-radius : 4px;
}

.hblank {
    height: 0.5em;
}

.dblank {
    border: none;
}

table.sortable a.sortheader {
  text-decoration: none;
}

/* source code */
pre,.s {
    text-align  : left;
    font-family : monospace;
    white-space : pre;
    padding     : 0.2em 0.5em 0em 0.5em;
}

/* Classes for color-coding coverage information:
 *   c0  : path not covered or coverage < 75%
 *   c1  : coverage >= 75%
 *   c2  : coverage >= 90%
 *   c3  : path covered or coverage = 100%
 */
.c0 {
background-color :           #ff9999;
border           : solid 1px #cc0000;
}
.c1 {
background-color :           #ffcc99;
border           : solid 1px #ff9933;
}
.c2 {
background-color :           #ffff99;
border           : solid 1px #cccc66;
}
.c3 {
background-color :           #99ff99;
border           : solid 1px #009900;
}

/* For syntax highlighting with PPI::HTML */
.line_number     { color: #aaaaaa;                   }
.comment         { color: #228B22;                   }
.symbol          { color: #00688B;                   }
.word            { color: #8B008B; font-weight:bold; }
.pragma          { color: #8B008B; font-weight:bold; }
.structure       { color: #000000;                   }
.number          { color: #B452CD;                   }
.single          { color: #CD5555;                   }
.double          { color: #CD5555;                   }
.match           { color: #CD5555;                   }
.substitute      { color: #CD5555;                   }
.heredoc_content { color: #CD5555;                   }
.interpolate     { color: #CD5555;                   }
.words           { color: #CD5555;                   }

/* for syntax highlighting with Perl::Tidy */
.c  { color: #228B22;                    } /* comment         */
.cm { color: #000000;                    } /* comma           */
.co { color: #000000;                    } /* colon           */
.h  { color: #CD5555; font-weight:bold;  } /* here-doc-target */
.hh { color: #CD5555; font-style:italic; } /* here-doc-text   */
.i  { color: #00688B;                    } /* identifier      */
.j  { color: #000000; font-weight:bold;  } /* label           */
.k  { color: #8B4513; font-weight:bold;  } /* keyword         */
.m  { color: #FF0000; font-weight:bold;  } /* subroutine      */
.n  { color: #B452CD;                    } /* numeric         */
.p  { color: #000000;                    } /* paren           */
.pd { color: #228B22; font-style:italic; } /* pod-text        */
.pu { color: #000000;                    } /* punctuation     */
.q  { color: #CD5555;                    } /* quote           */
.s  { color: #000000;                    } /* structure       */
.sc { color: #000000;                    } /* semicolon       */
.v  { color: #B452CD;                    } /* v-string        */
.w  { color: #000000;                    } /* bareword        */
